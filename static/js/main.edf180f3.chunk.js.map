{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/PageNavLink/PageNavLink.tsx","components/MainNav/MainNav.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","isLoading","selectPeopleSlug","findParrent","parentName","parent","find","isSelected","map","born","died","motherName","fatherName","PeoplePage","isError","arePeoplePresent","useParams","peopleSlug","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PageNavLink","text","isActive","MainNav","role","App","useState","setPeople","setIsLoading","setIsError","setArePeoplePresent","fetchData","getPeopleFromServer","length","useEffect","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.edf180f3.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../../types/Person';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n  isLoading: boolean,\n  selectPeopleSlug: string | null,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people, isLoading, selectPeopleSlug,\n}) => {\n  const findParrent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    if (parent) {\n      return <PersonLink person={parent} />;\n    }\n\n    return parentName || '-';\n  };\n\n  const isSelected = (person: Person) => person.slug === selectPeopleSlug;\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading ? (<Loader />)\n          : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={classNames({\n                      'has-background-warning': isSelected(person),\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>{findParrent(person.motherName)}</td>\n                    <td>{findParrent(person.fatherName)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\ntype Props = {\n  isError: boolean,\n  arePeoplePresent: boolean,\n  isLoading: boolean,\n  people: Person[],\n};\n\nexport const PeoplePage: React.FC<Props> = ({\n  isError,\n  arePeoplePresent,\n  isLoading,\n  people,\n}) => {\n  const { peopleSlug = null } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {isError && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      {!arePeoplePresent && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      <PeopleTable\n        people={people}\n        isLoading={isLoading}\n        selectPeopleSlug={peopleSlug}\n      />\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames('navbar-item',\n        { 'has-background-grey-lighter': isActive })}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const MainNav = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { getPeople } from './api';\nimport { Person } from './types/Person';\nimport { MainNav } from './components/MainNav/MainNav';\n\nexport const App: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [arePeoplePresent, setArePeoplePresent] = useState(true);\n\n  const fetchData = async () => {\n    try {\n      const getPeopleFromServer = await getPeople();\n\n      if (getPeopleFromServer.length === 0) {\n        setArePeoplePresent(false);\n      }\n\n      setPeople(getPeopleFromServer);\n      setIsLoading(false);\n    } catch (err) {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <MainNav />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route\n                path=\":peopleSlug\"\n                element={(\n                  <PeoplePage\n                    people={people}\n                    isLoading={isLoading}\n                    isError={isError}\n                    arePeoplePresent={arePeoplePresent}\n                  />\n                )}\n              />\n              <Route\n                index\n                element={(\n                  <PeoplePage\n                    people={people}\n                    isLoading={isLoading}\n                    isError={isError}\n                    arePeoplePresent={arePeoplePresent}\n                  />\n                )}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}