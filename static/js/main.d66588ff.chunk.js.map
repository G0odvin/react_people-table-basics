{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonProperties/PersonProperties.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/PageNavLink/PageNavLink.tsx","components/MainNav/MainNav.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","person","slug","sex","name","to","classNames","PersonProperties","human","people","selectPeopleSlug","born","died","motherName","fatherName","findParrent","parentName","parent","find","personage","PeopleTable","isLoading","map","PeoplePage","isError","arePeoplePresent","useParams","peopleSlug","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PageNavLink","text","isActive","MainNav","role","App","useState","setPeople","setIsLoading","setIsError","setArePeoplePresent","fetchData","getPeopleFromServer","length","useEffect","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d66588ff.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[],\n  person: Person,\n  selectPeopleSlug: string | null,\n};\n\nexport const PersonProperties: React.FC<Props> = ({\n  person,\n  people,\n  selectPeopleSlug,\n}) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  const findParrent = (parentName: string | null) => {\n    const parent = people.find(personage => personage.name === parentName);\n\n    if (parent) {\n      return <PersonLink person={parent} />;\n    }\n\n    return parentName || '-';\n  };\n\n  const isSelected = (human: Person) => human.slug === selectPeopleSlug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames({\n        'has-background-warning': isSelected(person),\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{findParrent(motherName)}</td>\n      <td>{findParrent(fatherName)}</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types/Person';\nimport { Loader } from '../Loader';\nimport { PersonProperties } from '../PersonProperties/PersonProperties';\n\ntype Props = {\n  people: Person[],\n  isLoading: boolean,\n  selectPeopleSlug: string | null,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  isLoading,\n  selectPeopleSlug,\n}) => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading\n          ? (<Loader />)\n          : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n              <tbody>\n                {people.map(person => (\n                  <PersonProperties\n                    person={person}\n                    key={person.slug}\n                    selectPeopleSlug={selectPeopleSlug}\n                    people={people}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\ntype Props = {\n  isError: boolean,\n  arePeoplePresent: boolean,\n  isLoading: boolean,\n  people: Person[],\n};\n\nexport const PeoplePage: React.FC<Props> = ({\n  isError,\n  arePeoplePresent,\n  isLoading,\n  people,\n}) => {\n  const { peopleSlug = null } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {isError && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      {!arePeoplePresent && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      <PeopleTable\n        people={people}\n        isLoading={isLoading}\n        selectPeopleSlug={peopleSlug}\n      />\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames('navbar-item',\n        { 'has-background-grey-lighter': isActive })}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const MainNav = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { getPeople } from './api';\nimport { Person } from './types/Person';\nimport { MainNav } from './components/MainNav/MainNav';\n\nexport const App: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [arePeoplePresent, setArePeoplePresent] = useState(true);\n\n  const fetchData = async () => {\n    try {\n      const getPeopleFromServer = await getPeople();\n\n      if (getPeopleFromServer.length === 0) {\n        setArePeoplePresent(false);\n      }\n\n      setPeople(getPeopleFromServer);\n      setIsLoading(false);\n    } catch (err) {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <MainNav />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route\n                path=\":peopleSlug\"\n                element={(\n                  <PeoplePage\n                    people={people}\n                    isLoading={isLoading}\n                    isError={isError}\n                    arePeoplePresent={arePeoplePresent}\n                  />\n                )}\n              />\n              <Route\n                index\n                element={(\n                  <PeoplePage\n                    people={people}\n                    isLoading={isLoading}\n                    isError={isError}\n                    arePeoplePresent={arePeoplePresent}\n                  />\n                )}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}